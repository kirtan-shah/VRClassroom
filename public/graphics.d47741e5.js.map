{"version":3,"sources":["javascript/graphics.js"],"names":["scene","renderer","camera","controls","width","window","innerWidth","height","innerHeight","moveForward","moveBackward","moveLeft","moveRight","moveUp","moveDown","velocity","THREE","Vector3","direction","init","WebGLRenderer","antialias","container","document","getElementById","setSize","setClearColor","appendChild","domElement","Scene","PerspectiveCamera","position","y","z","lookAt","PointerLockControls","addEventListener","lock","add","getObject","drawMap","event","keyCode","animate","requestAnimationFrame","render","isLocked","x","normalize","console","log","gridXZ","GridHelper","onWindowResize","undefined","aspect","updateProjectionMatrix","scrollToTop","scrollTo"],"mappings":"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","file":"graphics.d47741e5.js","sourceRoot":"../front","sourcesContent":["let scene, renderer, camera;\nlet controls;\n\nlet width = window.innerWidth\nlet height = window.innerHeight\n\nlet moveForward = false\nlet moveBackward = false\nlet moveLeft = false\nlet moveRight = false\nlet moveUp = false\nlet moveDown = false\n\nlet velocity = new THREE.Vector3();\nlet direction = new THREE.Vector3();\n\ninit();\nanimate();\n\nfunction init()\n{\n    renderer = new THREE.WebGLRenderer( {antialias:true} );\n    let container = document.getElementById('canvas-parent');\n\n    renderer.setSize (width, height);\n    renderer.setClearColor (0xEAEEF1, 1);\n    container.appendChild (renderer.domElement);\n\n    scene = new THREE.Scene();\n\n    camera = new THREE.PerspectiveCamera (45, width/height, 1, 10000);\n    camera.position.y = 160;\n    camera.position.z = 400;\n    camera.lookAt (new THREE.Vector3(0,0,0));\n\n    controls = new THREE.PointerLockControls( camera, renderer.domElement );\n\n    // User interaction needed for initial pointer lock control sequence\n    container.addEventListener( 'click', function () {\n      controls.lock();\n    }, false );\n\n    scene.add( controls.getObject() );\n\n    drawMap()\n\n    var onKeyDown = function ( event ) {\n      switch ( event.keyCode ) {\n        case 38: // up\n        case 87: // w\n          moveForward = true;\n          break;\n\n        case 37: // left\n        case 65: // a\n          moveLeft = true;\n          break;\n\n        case 40: // down\n        case 83: // s\n          moveBackward = true;\n          break;\n\n        case 39: // right\n        case 68: // d\n          moveRight = true;\n          break;\n\n        case 82: // r\n          moveUp = true;\n          break;\n\n        case 70: // f\n          moveDown = true;\n          break;\n      };\n    };\n\n\t\tvar onKeyUp = function ( event ) {\n      switch ( event.keyCode ) {\n        case 38: // up\n        case 87: // w\n          moveForward = false;\n          break;\n\n        case 37: // left\n        case 65: // a\n          moveLeft = false;\n          break;\n\n        case 40: // down\n        case 83: // s\n          moveBackward = false;\n          break;\n\n        case 39: // right\n        case 68: // d\n          moveRight = false;\n          break;\n\n        case 82: // r\n          moveUp = false;\n          break;\n\n        case 70: // f\n          moveDown = false;\n          break;\n      }\n    };\n\n  document.addEventListener( 'keydown', onKeyDown, false );\n  document.addEventListener( 'keyup', onKeyUp, false );\n}\n\nfunction animate()\n{\n  requestAnimationFrame ( animate );\n  renderer.render (scene, camera);\n\n  if ( controls.isLocked === true ) {\n    if(moveForward == true)\n      direction.z = -1.0\n    else if(moveBackward == true){\n      direction.z = 1.0\n    }\n    else if(moveForward == false && moveBackward == false){\n      direction.z = 0\n    }\n\n    if(moveRight == true)\n      direction.x = -1.0\n    else if(moveLeft == true){\n      direction.x = 1.0\n    }\n    else if(moveRight == false && moveLeft == false){\n      direction.x = 0\n    }\n\n    if(moveUp == true)\n      direction.y = 1.0\n    else if(moveDown == true){\n      direction.y = -1.0\n    }\n    else if(moveUp == false && moveDown == false){\n      direction.y = 0\n    }\n\n    direction.normalize(); // this ensures consistent movements in all directions\n\n    velocity.z = direction.z * 2;\n    velocity.x = direction.x * 2;\n    velocity.y = direction.y * 2;\n\n    controls.moveRight( - velocity.x);\n    controls.moveForward( - velocity.z);\n    controls.getObject().position.y += (velocity.y);\n  }\n}\n\nfunction drawMap() {\n  console.log(\"drawing 3d map\")\n\n  let gridXZ = new THREE.GridHelper(2000, 50);\n  scene.add(gridXZ);\n}\n\nwindow.addEventListener( 'resize', onWindowResize, false );\n\nfunction onWindowResize(){\n  if(camera != undefined) {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize( window.innerWidth, window.innerHeight);\n  }\n\n  width = window.innerWidth\n  height = window.innerHeight\n}\n\nfunction scrollToTop() {\n  window.scrollTo(0, 0)\n}\n"]}